{"version":3,"sources":["logo.svg","global/index.jsx","views/Home/controller.jsx","views/Home/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["SERVER_LINK","API","timeSince","date","seconds","Math","floor","Date","interval","Controller","props","useState","data","setData","socket","io","localStorage","getItem","token","setToken","useEffect","cToken","prompt","setItem","Axios","get","then","res","sort","a","b","dateUpdate","on","toast","success","setInterval","newData","dateRenew","warn","typewatch","timer","callback","ms","clearTimeout","setTimeout","handleSearch","e","value","target","toLowerCase","filter","item","phoneId","indexOf","number","handleSave","post","emit","catch","alert","clear","window","location","reload","Home","handleRestoreToken","handleSystemAppUpdate","autoClose","hideProgressBar","draggable","className","onClick","onChange","type","placeholder","map","i","defaultValue","name","note","status","getDate","getMonth","getFullYear","getHours","getMinutes","navigator","clipboard","writeText","otp","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82969bb7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const DEBUG = false;\n\nexport const SERVER_LINK = `${DEBUG ? 'http://115.77.159.59' : 'https://server.nghi-otp.lavenes.com'}:9008`\nexport const API = `${SERVER_LINK}/lavenes_api/v1`;\n\n//GET TIME SINCE FUNC\nexport function timeSince(date) {\n  \n    var seconds = Math.floor((new Date() - date) / 1000);\n  \n    var interval = Math.floor(seconds / 31536000);\n  \n    if (interval > 1) {\n      return interval + \" năm trước\";\n    }\n    interval = Math.floor(seconds / 2592000);\n    if (interval > 1) {\n      return interval + \" tháng trước\";\n    }\n    interval = Math.floor(seconds / 86400);\n    if (interval > 1) {\n      return interval + \" ngày trước\";\n    }\n    interval = Math.floor(seconds / 3600);\n    if (interval > 1) {\n      return interval + \" giờ trước\";\n    }\n    interval = Math.floor(seconds / 60);\n    if (interval > 1) {\n      return interval + \" phút trước\";\n    }\n\n    if(Math.floor(seconds) <= 0) return \"Mới đây\";\n\n    return Math.floor(seconds) + \" giây trước\";\n}","import { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { API, SERVER_LINK } from \"../../global\";\nimport { io } from \"socket.io-client\";\nimport { toast } from \"react-toastify\";\n\nexport function Controller(props) {\n  const [data, setData] = useState(null);\n  const socket = io(SERVER_LINK);\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n\n  //Fetch data\n  useEffect(() => {\n    let cToken = token || prompt(\"Nhập token của bạn\");\n\n    localStorage.setItem(\"token\", cToken);\n\n    setToken(cToken);\n\n    Axios.get(`${API}/get_phones/${cToken}`).then((res) => {\n      let data = res.data.sort(function (a, b) {\n        if (!a.dateUpdate) return false;\n        if (!b.dateUpdate) return false;\n\n        return new Date(b.dateUpdate) - new Date(a.dateUpdate);\n      });\n\n      setData(data);\n    });\n\n    //Listen ping\n   //  socket.on(\"@server-ping\", () => {\n   //    Axios.get(`${API}/get_phones/${cToken}`).then((res) => {\n   //      let data = res.data.sort(function (a, b) {\n   //        if (!a.dateUpdate) return false;\n   //        if (!b.dateUpdate) return false;\n\n   //        return new Date(b.dateUpdate) - new Date(a.dateUpdate);\n   //      });\n\n   //      setData(data);\n   //    });\n   //  });\n\n    //Listen update otp\n    socket.on(\"@server-update-otp\", (res) => {\n      Axios.get(`${API}/get_phones/${cToken}`).then((res) => {\n        setData(null);\n\n        let data = res.data.sort(function (a, b) {\n          if (!a.dateUpdate) return false;\n          if (!b.dateUpdate) return false;\n\n          return new Date(b.dateUpdate) - new Date(a.dateUpdate);\n        });\n\n        setData(data);\n      });\n\n      toast.success(\"Đã thêm mã otp mới\");\n    });\n\n    //Listen pong\n    setInterval(() => {\n      Axios.get(`${API}/get_phones/${cToken}`).then((res) => {\n        let data = res.data.sort(function (a, b) {\n          if (!a.dateUpdate) return false;\n          if (!b.dateUpdate) return false;\n\n          return new Date(b.dateUpdate) - new Date(a.dateUpdate);\n        });\n\n        setData(data);\n      });\n    }, 60000 * 10);\n\n    //Listen update renew phone\n    socket.on(\"@server-renew-phone\", (res) => {\n      Axios.get(`${API}/get_phones/${cToken}`).then((res) => {\n        setData(null);\n\n        let newData = res.data.sort(function (a, b) {\n          if (!a.dateRenew) return false;\n          if (!b.dateRenew) return false;\n\n          return new Date(b.dateRenew) - new Date(a.dateRenew);\n        });\n\n        setData(newData);\n      });\n\n      toast.warn(\"Có thiết bị mới vừa được renew\");\n    });\n  }, []);\n\n  const handleSystemAppUpdate = () => {\n   socket.emit(\"@app-update\");\n   toast.success(\"Đã gửi cập nhật xuống toàn bộ thiết bị\");\n  }\n\n  const handleRestoreToken = () => {\n    localStorage.clear();\n    window.location.reload();\n  };\n\n  const typewatch = (function () {\n    var timer = 0;\n    return function (callback, ms) {\n      clearTimeout(timer);\n      timer = setTimeout(callback, ms);\n    };\n  })();\n\n  //Search data\n  const handleSearch = (e) => {\n    let value = e.target.value.toLowerCase();\n\n    //Wait ultil complete typing\n    typewatch(() => {\n      Axios.get(`${API}/get_phones/${token}`).then((res) => {\n        //Filter\n        let data = res.data.filter((item) => {\n          if (item.phoneId.indexOf(value) > -1) return true;\n          if (item.number.indexOf(value) > -1) return true;\n\n          return false;\n        });\n\n        //Sort by date update\n        data = data.sort(function (a, b) {\n          return new Date(b.dateUpdate) - new Date(a.dateUpdate);\n        });\n\n        setData(data);\n      });\n    }, 1000);\n  };\n\n  //Save data\n  const handleSave = () => {\n    Axios.post(`${API}/update_phones`, data)\n      .then(() => {\n        toast.success(\"Lưu thành công!\");\n\n        socket.emit(\"@client-update-phones\");\n      })\n      .catch((e) => alert(e));\n  };\n\n  return {\n    data,\n    setData,\n    handleSearch,\n    handleSave,\n    setData,\n    handleRestoreToken,\n    handleSystemAppUpdate,\n  };\n}\n","import React from 'react';\nimport \"./styles.scss\";\nimport {IoSearch} from 'react-icons/io5';\nimport {timeSince} from '../../global';\nimport {Controller} from './controller';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Home = (props) => {\n    const {data, handleSearch, handleSave, setData, handleRestoreToken, handleSystemAppUpdate} = new Controller(props);\n\n    if(!data) return <div></div>\n\n    return (\n        <div>\n            <ToastContainer autoClose={2000} hideProgressBar={true} draggable/>\n            <div className=\"header\">\n                <h1>Quản lý OTP</h1>\n                <button onClick={handleSystemAppUpdate}>Cập nhật app</button>\n                <button onClick={handleRestoreToken}>Đổi token</button>\n                <button onClick={handleSave}>Lưu</button>\n                <div className=\"search-bar\">\n                    <IoSearch className=\"icon\"/>\n                    <input onChange={handleSearch} type=\"text\" placeholder=\"Tìm kiếm\"/>\n                </div>\n            </div>\n            <table>\n              <tr>\n                <th>Số điện thoại</th>\n                <th>Tên thiết bị</th>\n                <th>Note</th>\n                <th>Id thiết bị</th>\n                <th>Trạng thái</th>\n                <th>Thời gian thêm điện thoại</th>\n                <th>Giờ tạo OTP</th>\n                <th>Mã OTP</th>\n              </tr>\n                {data.map((item, i) => {\n                    let date = new Date(item.dateRenew);\n\n                    return(\n                        <tr key={`phone-item-${i}`}>\n                          <td><input type=\"text\" className=\"textbox\" defaultValue={item.number} onChange={(e) => {\n                              data[i].number = e.target.value;\n                              setData(data);\n                          }}/> </td>\n                          <td><input type=\"text\" className=\"textbox\" defaultValue={item.name} onChange={(e) => {\n                              data[i].name = e.target.value;\n                              setData(data);\n                          }}/> </td>\n                          <td><textarea onChange={(e) => {\n                              data[i].note = e.target.value;\n                              setData(data);\n                          }}>{item.note}</textarea></td>\n                          <td>{item.phoneId}</td>\n                          <td>{item.status}</td>\n                          <td>{date.getDate() <= 9 ? '0' + date.getDate() : date.getDate()}/{(date.getMonth() + 1) <= 9 ? '0' + (date.getMonth() + 1) : (date.getMonth() + 1)}/{date.getFullYear()} lúc {date.getHours() <= 9 ? '0' + date.getHours() : date.getHours()}:{date.getMinutes() <= 9 ? '0' + date.getMinutes() : date.getMinutes()}</td>\n                          <td>{item.dateUpdate ? timeSince(new Date(item.dateUpdate)) : ''}</td>\n                          <td onClick={() => {\n                              navigator.clipboard.writeText(item.otp); \n                              toast.success(`Đã copy mã ${item.number} vào clipboard!`); \n                            }}><b>{item.otp}</b></td>\n                        </tr>\n                    )\n                })}\n            </table>\n        </div>\n    )\n}\n\nexport default Home;\n","import logo from './logo.svg';\nimport './App.css';\nimport Home from './views/Home';\n\nfunction App() {\n  return (\n    <Home/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}