{"version":3,"sources":["logo.svg","global/index.jsx","views/Home/controller.jsx","views/Home/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["SERVER_LINK","API","timeSince","date","seconds","Math","floor","Date","interval","Controller","props","useState","data","setData","socket","io","useEffect","Axios","get","then","res","sort","a","b","dateUpdate","on","toast","success","newData","dateRenew","warn","typewatch","timer","callback","ms","clearTimeout","setTimeout","handleSearch","e","value","target","toLowerCase","filter","item","phoneId","indexOf","number","handleSave","post","emit","catch","alert","Home","autoClose","hideProgressBar","draggable","className","onClick","onChange","type","placeholder","map","i","defaultValue","note","getDate","getMonth","getFullYear","getHours","getMinutes","navigator","clipboard","writeText","otp","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a41cc8ea.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const DEBUG = false;\r\n\r\nexport const SERVER_LINK = `${DEBUG ? 'http://115.77.159.59' : 'https://server.confession.lavenes.com'}:8082`\r\nexport const API = `${SERVER_LINK}/lavenes_api/v1`;\r\n\r\n//GET TIME SINCE FUNC\r\nexport function timeSince(date) {\r\n  \r\n    var seconds = Math.floor((new Date() - date) / 1000);\r\n  \r\n    var interval = Math.floor(seconds / 31536000);\r\n  \r\n    if (interval > 1) {\r\n      return interval + \" năm trước\";\r\n    }\r\n    interval = Math.floor(seconds / 2592000);\r\n    if (interval > 1) {\r\n      return interval + \" tháng trước\";\r\n    }\r\n    interval = Math.floor(seconds / 86400);\r\n    if (interval > 1) {\r\n      return interval + \" ngày trước\";\r\n    }\r\n    interval = Math.floor(seconds / 3600);\r\n    if (interval > 1) {\r\n      return interval + \" giờ trước\";\r\n    }\r\n    interval = Math.floor(seconds / 60);\r\n    if (interval > 1) {\r\n      return interval + \" phút trước\";\r\n    }\r\n\r\n    if(Math.floor(seconds) <= 0) return \"Mới đây\";\r\n\r\n    return Math.floor(seconds) + \" giây trước\";\r\n}","import {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\nimport {API, SERVER_LINK} from '../../global';\r\nimport { io } from \"socket.io-client\";\r\nimport { toast } from 'react-toastify';\r\n\r\nexport function Controller(props) {\r\n    const [data, setData] = useState(null);\r\n    const socket = io(SERVER_LINK);\r\n\r\n    //Fetch data\r\n    useEffect(() => {\r\n        Axios.get(`${API}/get_phones`).then(res => {\r\n            let data = res.data.sort(function(a,b){\r\n                if(!a.dateUpdate) return false;\r\n                if(!b.dateUpdate) return false;\r\n\r\n                return new Date(b.dateUpdate) - new Date(a.dateUpdate);\r\n            });\r\n\r\n            setData(data);\r\n        })\r\n\r\n        //Listen update otp\r\n        socket.on('@server-update-otp', res => {\r\n            Axios.get(`${API}/get_phones`).then(res => {\r\n                setData(null);\r\n\r\n                let data = res.data.sort(function(a,b){\r\n                    if(!a.dateUpdate) return false;\r\n                    if(!b.dateUpdate) return false;\r\n    \r\n                    return new Date(b.dateUpdate) - new Date(a.dateUpdate);\r\n                });\r\n\r\n                setData(data);\r\n            })\r\n   \r\n            toast.success(\"Đã thêm mã otp mới\");\r\n        })\r\n\r\n        //Listen update renew phone\r\n        socket.on(\"@server-renew-phone\", res => {\r\n            Axios.get(`${API}/get_phones`).then(res => {\r\n                setData(null);\r\n\r\n                let newData = res.data.sort(function(a,b){\r\n                    if(!a.dateRenew) return false;\r\n                    if(!b.dateRenew) return false;\r\n\r\n                    return new Date(b.dateRenew) - new Date(a.dateRenew);\r\n                });\r\n\r\n                setData(newData);\r\n            })\r\n\r\n            toast.warn(\"Có thiết bị mới vừa được renew\");\r\n        })\r\n    }, []);\r\n\r\n    const typewatch = function(){\r\n        var timer = 0;\r\n        return function(callback, ms){\r\n            clearTimeout (timer);\r\n            timer = setTimeout(callback, ms);\r\n        }  \r\n    }(); \r\n\r\n    //Search data\r\n    const handleSearch = (e) => {\r\n        let value = e.target.value.toLowerCase();\r\n\r\n        //Wait ultil complete typing\r\n        typewatch(() => {\r\n            Axios.get(`${API}/get_phones`).then(res => {\r\n                //Filter\r\n                let data = res.data.filter((item) => {\r\n                    if(item.phoneId.indexOf(value) > -1) return true;\r\n                    if(item.number.indexOf(value) > -1) return true;\r\n\r\n                    return false;\r\n                })\r\n\r\n                //Sort by date update\r\n                data = data.sort(function(a,b){\r\n                    return new Date(b.dateUpdate) - new Date(a.dateUpdate);\r\n                });\r\n    \r\n                setData(data);\r\n            })\r\n        }, 1000);\r\n    }\r\n\r\n    //Save data\r\n    const handleSave = () => {\r\n        Axios.post(`${API}/update_phones`, data).then(() => {\r\n            toast.success(\"Lưu thành công!\");\r\n\r\n            socket.emit(\"@client-update-phones\");\r\n        }).catch(e => alert(e));\r\n    }\r\n\r\n    return {\r\n        data, \r\n        setData,\r\n        handleSearch,\r\n        handleSave,\r\n        setData\r\n    }\r\n}","import React from 'react';\r\nimport \"./styles.scss\";\r\nimport {IoSearch} from 'react-icons/io5';\r\nimport {timeSince} from '../../global';\r\nimport {Controller} from './controller';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Home = (props) => {\r\n    const {data, handleSearch, handleSave, setData} = new Controller(props);\r\n\r\n    if(!data) return <div></div>\r\n\r\n    return (\r\n        <div>\r\n            <ToastContainer autoClose={2000} hideProgressBar={true} draggable/>\r\n            <div className=\"header\">\r\n                <h1>Quản lý OTP</h1>\r\n                <button onClick={handleSave}>Lưu</button>\r\n                <div className=\"search-bar\">\r\n                    <IoSearch className=\"icon\"/>\r\n                    <input onChange={handleSearch} type=\"text\" placeholder=\"Tìm kiếm\"/>\r\n                </div>\r\n            </div>\r\n            <table>\r\n              <tr>\r\n                <th>Số điện thoại</th>\r\n                <th>Note</th>\r\n                <th>Id thiết bị</th>\r\n                <th>Thời gian thêm điện thoại</th>\r\n                <th>Giờ tạo OTP</th>\r\n                <th>Mã OTP</th>\r\n              </tr>\r\n                {data.map((item, i) => {\r\n                    let date = new Date(item.dateRenew);\r\n\r\n                    return(\r\n                        <tr key={`phone-item-${i}`}>\r\n                          <td><input type=\"text\" className=\"textbox\" defaultValue={item.number} onChange={(e) => {\r\n                              data[i].number = e.target.value;\r\n                              setData(data);\r\n                          }}/> </td>\r\n                          <td><textarea onChange={(e) => {\r\n                              data[i].note = e.target.value;\r\n                              setData(data);\r\n                          }}>{item.note}</textarea></td>\r\n                          <td>{item.phoneId}</td>\r\n                          <td>{date.getDate() <= 9 ? '0' + date.getDate() : date.getDate()}/{(date.getMonth() + 1) <= 9 ? '0' + (date.getMonth() + 1) : (date.getMonth() + 1)}/{date.getFullYear()} lúc {date.getHours() <= 9 ? '0' + date.getHours() : date.getHours()}:{date.getMinutes() <= 9 ? '0' + date.getMinutes() : date.getMinutes()}</td>\r\n                          <td>{item.dateUpdate ? timeSince(new Date(item.dateUpdate)) : ''}</td>\r\n                          <td onClick={() => {\r\n                              navigator.clipboard.writeText(item.otp); \r\n                              toast.success(`Đã copy mã ${item.number} vào clipboard!`); \r\n                            }}><b>{item.otp}</b></td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import logo from './logo.svg';\nimport './App.css';\nimport Home from './views/Home';\n\nfunction App() {\n  return (\n    <Home/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}